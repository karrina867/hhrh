#include <iostream>
#include <string>
using namespace std;
//int sing(double x) {
	//if (x < 0) return -1;
	//if (x == 0) return 0;
	//if (x > 0) return 1;

//}



int  CircleS(double r) {

	if (r < 0) return 0;
	if (r == 0) return 1;
	if (r > 0) return 2;

	int main() {
		setlocale(LC_ALL, "russa");
		double r1, r2, r3;
		double P = 3.14 * r * r return s;
			cout << "введите большой радисус"
			cin >> r1;
		cout << " введите маленький радиус"
			cin = r2;
		double s1 = 3, 14 * (r1 * r1) -
			cout << sign(a) + sing(b) << endl;

		//Proc16.Описать функцию Sign(X) целого типа, возвращающую для вещественного числа X следующие значения :
		//?1, если X < 0; 0, если X = 0; 1, если X > 0.
		//	С помощью этой функции найти значение выражения sign(A) + sign(B)
			//для данных вещественных чисел A и B
		//если X < 0; 0
		//если X = 0; 1,
		// если X > 0.
		//double a, b;
		//cin >> a >> b;
		//cout << sing(a) + sing(b) << endl;

		//Proc17.Описать функцию RootsCount(A, B, C) целого типа, определяющую
			//количество корней квадратного уравнения A·x
		//	2 + B·x + C = 0 (A, B, C —
			//	вещественные параметры, A 6 = 0).С ее помощью найти количество корней
			//для каждого из трех квадратных уравнений с данными коэффициентами.
		//	Количество корней определять по значению дискриминанта :
		//D = B
			//2 ? 4·A·C.
		//double a, b, c;
		//for (int i = 1; i <= 3;i++  ) {
		//	cin >> a >> b >> c;
		//	cout << rootsCount(a, b, c) << endl;
		//Proc18.Описать функцию CircleS(R) вещественного типа, находящую площадь круга радиуса R(R — вещественное).С помощью этой функции
		//	найти площади трех кругов с данными радиусами.Площадь круга радиуса R вычисляется по формуле S = ?·R
		//	2
			//.В качестве значения ? использовать 3.14.

	}





















